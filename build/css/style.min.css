.icon{display:inline-block;width:1em;height:1em;fill:currentColor}.icon-programmer{font-size:5.6rem;width:1em}/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}main{display:block}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font:1em monospace,monospace}a{background:0 0}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font:1em monospace,monospace}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font:100%/1.15 inherit;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}template{display:none}[hidden]{display:none}*,::after,::before{box-sizing:inherit;font-family:"IBM Plex Sans",sans-serif;line-height:1.5em}html{box-sizing:border-box}body{margin:0}img{max-width:100%}a{display:inline;-webkit-transition-timing-function:ease-in-out;transition-timing-function:ease-in-out;-webkit-transition-duration:.7s;transition-duration:.7s;-webkit-transition-delay:0s;transition-delay:0s;-webkit-transition-property:color;transition-property:color;white-space:nowrap;overflow:hidden;position:relative;z-index:2;text-decoration:none;box-sizing:border-box;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-touch-callout:none;-webkit-tap-highlight-color:transparent}a:focus:after,a:focus:before,a:hover:after,a:hover:before{background:#c7eeff;outline:0;-webkit-transition-property:width,background-color;transition-property:width,background-color;width:100%;-webkit-transition-duration:.7s;transition-duration:.7s;-webkit-transition-timing-function:ease-in-out;transition-timing-function:ease-in-out;-webkit-transition-delay:0s;transition-delay:0s}a:after,a:before{bottom:0;left:0;right:0;margin:0 auto;content:"";position:absolute;z-index:-1;-webkit-transition-property:width,background-color;transition-property:width,background-color;width:0;height:3px}.container{width:1280px;margin:0 auto;display:-ms-flex;display:-webkit-box;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;flex-direction:row;-webkit-box-pack:justify;justify-content:space-between;-webkit-box-align:center;align-items:center}@media (max-width:768px){.container{width:88%}}section{min-height:100vh;padding:150px 0 60px;position:relative;z-index:2}@media (max-width:768px){section{padding:130px 20px 60px}}.bg{background:url(../img/bg2.jpg) no-repeat 0 0/cover;position:fixed;width:100vw;height:100vh;z-index:1}.header{position:fixed;z-index:3;width:100vw;padding-top:30px}.header__icon{margin-right:30px;color:#0077c0}.header__logo:hover .header__title{color:#c7eeff}.header__logo:hover .header__icon{stroke:#c7eeff}.header__title{font-size:40px;font-weight:700;text-transform:uppercase;color:#1d242b;width:260px;display:inline-block;margin:0;-webkit-transition:all .7s;transition:all .7s;color:#0077c0}@media (max-width:768px){.header__title{font-size:20px;width:150px}}.header__nav{display:-ms-flex;display:-webkit-box;display:flex}.header__link{margin-left:30px;text-transform:uppercase;font-size:28px;color:#0077c0}@media (max-width:768px){.header__link{display:none}}.header__link:hover{color:#c7eeff}.header__link:first-child{margin:0}.footer{position:fixed;width:100vw;top:90vh;z-index:3}.start .container{height:calc(100vh - 210px);-webkit-box-pack:end;justify-content:flex-end;-webkit-box-align:end;align-items:flex-end}.start__title{font-size:80px;color:#0077c0;margin:0;-webkit-transition:all .7s;transition:all .7s;margin:0 10% 10% 0}@media (max-width:768px){.start__title{font-size:60px}}.start__title span{color:#1d242b;-webkit-transition:all .7s;transition:all .7s}.start__title:hover{color:#c7eeff}.start__title:hover span{color:#0077c0}.portfolio .container{-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column}.portfolio__title{font-size:50px;margin:0;color:#0077c0}.portfolio__subtitle{font-size:28px;color:#c7eeff;text-align:center}.portfolio__content{display:grid;grid-template-rows:1fr 1fr;grid-template-columns:1fr 1fr 1fr;gap:30px}.portfolio__item{background-size:100% 100%;background-repeat:no-repeat;width:410px;height:280px;border-radius:15px;box-shadow:0 0 25px rgba(250,250,250,.19),0 0 50px rgba(250,250,250,.22);-webkit-transition:box-shadow .7s;transition:box-shadow .7s;-webkit-transition:margin .3s;transition:margin .3s;margin:5px}.portfolio__item-slowave{background:url(../img/Slowave.jpg) no-repeat 0 0/100% 100%}.portfolio__item-specteh{background:url(../img/SpeTech.jpg) no-repeat 0 0/100% 100%}.portfolio__item-balidf{background:url(../img/Bal-IDF.jpg) no-repeat 0 0/100% 100%}.portfolio__item-vehicle{background:url("../img/Vehicle Selection.jpg") no-repeat 0 0/100% 100%}.portfolio__item-brain{background:url("../img/Content Brain.jpg") no-repeat 0 0/100% 100%}.portfolio__item:hover{box-shadow:0 0 25px rgba(0,119,192,.9),0 0 50px rgba(250,250,250,.22);margin:0}.portfolio__item:hover .item__title{visibility:visible}.portfolio__item:hover .item__tags{visibility:visible}.portfolio__item:hover .item__filter{visibility:visible}.item__title{visibility:hidden;grid-row:1;margin:0;color:#c7eeff}.item__tags{visibility:hidden;grid-row:3;color:#c7eeff;display:-ms-flex;display:-webkit-box;display:flex;overflow:hidden}.item__filter{background:#1d242b;visibility:hidden;padding:20px;display:grid;grid-template-rows:30px 1fr 20px;width:100%;height:100%;opacity:.8;border-radius:15px}.tag{margin-right:8px;padding:3px;text-transform:uppercase;font-size:12px;background:#0077c0;color:#c7eeff}.tag-ttn{text-transform:none}.tag:nth-child(2n){background:#913399}.tag:nth-child(3n){background:#45668e}.tag:nth-child(4n){background:#dd4b39}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
